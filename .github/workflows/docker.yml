name: 🐳 Build & Push Docker Images

# When to run this workflow
on:
  push:
    branches: [ main ]  # Only build images on main branch
    tags:
      - 'v*'  # Also build on version tags (e.g., v1.0.0)
  workflow_dispatch:  # Allow manual trigger from GitHub UI

env:
  REGISTRY: ghcr.io  # GitHub Container Registry
  IMAGE_NAME_API: ${{ github.repository }}/moe-api
  IMAGE_NAME_TRAIN: ${{ github.repository }}/moe-train

jobs:
  build-and-push:
    name: Build Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # Required to push to GitHub Container Registry
    
    steps:
      # Step 1: Get the code
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      # Step 2: Login to GitHub Container Registry
      - name: 🔐 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Step 3: Extract metadata (tags, labels)
      - name: 🏷️ Extract Docker metadata (API)
        id: meta-api
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      
      - name: 🏷️ Extract Docker metadata (Train)
        id: meta-train
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_TRAIN }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      
      # Step 4: Set up Docker Buildx (advanced build features)
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Step 5: Build and push API image
      - name: 🐳 Build and Push API Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.api
          push: true
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Step 6: Build and push Training image
      - name: 🐳 Build and Push Training Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.train
          push: true
          tags: ${{ steps.meta-train.outputs.tags }}
          labels: ${{ steps.meta-train.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Step 7: Summary
      - name: 📝 Image Summary
        run: |
          echo "### 🎉 Docker Images Built Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**API Image Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta-api.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Training Image Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta-train.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
